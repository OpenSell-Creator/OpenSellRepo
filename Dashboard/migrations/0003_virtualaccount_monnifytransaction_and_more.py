# Generated by Django 5.2.4 on 2025-10-15 19:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Dashboard', '0002_alter_productboost_options_remove_productboost_cost_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_reference', models.CharField(max_length=100, unique=True)),
                ('account_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_code', models.CharField(max_length=10)),
                ('account_type', models.CharField(choices=[('permanent', 'Permanent Virtual Account'), ('reserved', 'Reserved Account')], default='permanent', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('bvn', models.CharField(blank=True, max_length=11, null=True)),
                ('nin', models.CharField(blank=True, max_length=11, null=True)),
                ('kyc_verified', models.BooleanField(default=False)),
                ('kyc_verified_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('monnify_response', models.JSONField(blank=True, default=dict)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_account', to='Dashboard.useraccount')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MonnifyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('payment_reference', models.CharField(max_length=100)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_payable', models.DecimalField(decimal_places=2, max_digits=10)),
                ('settlement_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('paid_on', models.DateTimeField()),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('OVERPAID', 'Overpaid'), ('PARTIALLY_PAID', 'Partially Paid'), ('FAILED', 'Failed'), ('REVERSED', 'Reversed')], max_length=20)),
                ('payment_description', models.TextField(blank=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('customer_name', models.CharField(blank=True, max_length=255)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('destination_account_number', models.CharField(blank=True, max_length=20)),
                ('destination_account_name', models.CharField(blank=True, max_length=255)),
                ('destination_bank_name', models.CharField(blank=True, max_length=100)),
                ('destination_bank_code', models.CharField(blank=True, max_length=10)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('credited_to_account', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('webhook_payload', models.JSONField(blank=True, default=dict)),
                ('dashboard_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monnify_transaction', to='Dashboard.transaction')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monnify_transactions', to='Dashboard.useraccount')),
                ('virtual_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='Dashboard.virtualaccount')),
            ],
            options={
                'ordering': ['-paid_on'],
            },
        ),
        migrations.CreateModel(
            name='PaymentNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('SUCCESSFUL_TRANSACTION', 'Successful Transaction'), ('FAILED_TRANSACTION', 'Failed Transaction'), ('REVERSED_TRANSACTION', 'Reversed Transaction'), ('ACCOUNT_CREDITED', 'Account Credited')], max_length=50)),
                ('transaction_reference', models.CharField(db_index=True, max_length=100)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('raw_payload', models.JSONField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('monnify_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='Dashboard.monnifytransaction')),
            ],
            options={
                'ordering': ['-received_at'],
                'indexes': [models.Index(fields=['transaction_reference', 'processed'], name='Dashboard_p_transac_105b16_idx'), models.Index(fields=['-received_at'], name='Dashboard_p_receive_0b63c9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='virtualaccount',
            index=models.Index(fields=['account_reference'], name='Dashboard_v_account_15fa49_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualaccount',
            index=models.Index(fields=['account_number'], name='Dashboard_v_account_26c4b5_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualaccount',
            index=models.Index(fields=['user_account', 'status'], name='Dashboard_v_user_ac_c775fb_idx'),
        ),
        migrations.AddIndex(
            model_name='monnifytransaction',
            index=models.Index(fields=['transaction_reference'], name='Dashboard_m_transac_b261e5_idx'),
        ),
        migrations.AddIndex(
            model_name='monnifytransaction',
            index=models.Index(fields=['payment_reference'], name='Dashboard_m_payment_c29bfd_idx'),
        ),
        migrations.AddIndex(
            model_name='monnifytransaction',
            index=models.Index(fields=['user_account', '-paid_on'], name='Dashboard_m_user_ac_1c3cd4_idx'),
        ),
        migrations.AddIndex(
            model_name='monnifytransaction',
            index=models.Index(fields=['payment_status', 'processed'], name='Dashboard_m_payment_1a89dd_idx'),
        ),
    ]
